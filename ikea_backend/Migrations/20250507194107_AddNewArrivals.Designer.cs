// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ikea_backend.Data;

#nullable disable

namespace ikea_backend.Migrations
{
    [DbContext(typeof(IkeaDbContext))]
    [Migration("20250507194107_AddNewArrivals")]
    partial class AddNewArrivals
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ikea_data.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("ParentId")
                        .HasColumnType("int");

                    b.Property<string>("Slug")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ParentId");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Slug = "living-room",
                            Title = "Гостиная"
                        },
                        new
                        {
                            Id = 2,
                            Slug = "bedroom",
                            Title = "Спальня"
                        },
                        new
                        {
                            Id = 3,
                            Slug = "kitchen-and-dining",
                            Title = "Кухня и столовая"
                        },
                        new
                        {
                            Id = 4,
                            Slug = "bathroom",
                            Title = "Ванная"
                        },
                        new
                        {
                            Id = 5,
                            Slug = "office",
                            Title = "Офис"
                        },
                        new
                        {
                            Id = 6,
                            ParentId = 1,
                            Slug = "sofas",
                            Title = "Диваны"
                        },
                        new
                        {
                            Id = 30,
                            ParentId = 5,
                            Slug = "desk-lamps",
                            Title = "Настольные лампы"
                        });
                });

            modelBuilder.Entity("ikea_data.Models.NewArrival", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("NewArrivals");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ImageUrl = "/img/new_options_products/set-1.png",
                            Text = "Sofa"
                        },
                        new
                        {
                            Id = 2,
                            ImageUrl = "/img/new_options_products/set-2.png",
                            Text = "Decoration"
                        },
                        new
                        {
                            Id = 3,
                            ImageUrl = "/img/new_options_products/set-3.png",
                            Text = "Pillow"
                        });
                });

            modelBuilder.Entity("ikea_data.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("MainImage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Slug")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 19,
                            MainImage = "/src/assets/img/products/product-1.png",
                            Name = "Chair",
                            Price = 59.99m,
                            Slug = "chair-1"
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 12,
                            MainImage = "/src/assets/img/products/product-2.png",
                            Name = "Lamp",
                            Price = 19.99m,
                            Slug = "lamp-2"
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 12,
                            MainImage = "/src/assets/img/products/product-3.png",
                            Name = "Lamp",
                            Price = 19.99m,
                            Slug = "lamp-3"
                        });
                });

            modelBuilder.Entity("ikea_data.Models.ProductCharacteristic", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductCharacteristics");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Material",
                            ProductId = 1,
                            Value = "Wood"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Color",
                            ProductId = 1,
                            Value = "Brown"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Color",
                            ProductId = 2,
                            Value = "White"
                        });
                });

            modelBuilder.Entity("ikea_data.Models.ProductComment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CommentText")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int?>("Rating")
                        .HasColumnType("int");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductComments");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CommentText = "Nice chair",
                            ProductId = 1,
                            Rating = 5,
                            UserName = "User1"
                        },
                        new
                        {
                            Id = 2,
                            CommentText = "Bright lamp",
                            ProductId = 2,
                            Rating = 4,
                            UserName = "User2"
                        });
                });

            modelBuilder.Entity("ikea_data.Models.ProductImage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("SortOrder")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductImages");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ImageUrl = "/src/assets/img/products/product-1.png",
                            ProductId = 1,
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 2,
                            ImageUrl = "/src/assets/img/products/product-2.png",
                            ProductId = 2,
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 3,
                            ImageUrl = "/src/assets/img/products/product-3.png",
                            ProductId = 3,
                            SortOrder = 0
                        });
                });

            modelBuilder.Entity("ikea_data.Models.Set", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Slug")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Sets");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ImageUrl = "/src/assets/img/furniture/furniture-1.png",
                            Name = "Набор №1",
                            Slug = "furniture-set-1"
                        },
                        new
                        {
                            Id = 2,
                            ImageUrl = "/src/assets/img/furniture/furniture-2.png",
                            Name = "Набор №2",
                            Slug = "furniture-set-2"
                        },
                        new
                        {
                            Id = 3,
                            ImageUrl = "/src/assets/img/furniture/furniture-3.png",
                            Name = "Набор №3",
                            Slug = "furniture-set-3"
                        });
                });

            modelBuilder.Entity("ikea_data.Models.SetItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int>("SetId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.HasIndex("SetId");

                    b.ToTable("SetItems");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ProductId = 1,
                            Quantity = 2,
                            SetId = 1
                        },
                        new
                        {
                            Id = 2,
                            ProductId = 2,
                            Quantity = 1,
                            SetId = 1
                        },
                        new
                        {
                            Id = 3,
                            ProductId = 2,
                            Quantity = 2,
                            SetId = 2
                        },
                        new
                        {
                            Id = 4,
                            ProductId = 3,
                            Quantity = 1,
                            SetId = 2
                        },
                        new
                        {
                            Id = 5,
                            ProductId = 1,
                            Quantity = 1,
                            SetId = 3
                        });
                });

            modelBuilder.Entity("ikea_data.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsAdmin")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("PasswordSalt")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "1 Admin Road",
                            BirthDate = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Country = "UK",
                            Email = "admin@ikea.com",
                            FirstName = "Admin",
                            IsAdmin = true,
                            LastName = "User",
                            PasswordHash = new byte[] { 45, 254, 197, 241, 52, 176, 158, 177, 161, 196, 3, 238, 199, 21, 216, 118, 144, 194, 245, 84, 164, 75, 58, 194, 36, 9, 25, 108, 6, 99, 228, 33, 139, 155, 202, 113, 155, 186, 250, 65, 155, 67, 102, 50, 207, 39, 84, 219, 78, 7, 220, 147, 79, 143, 120, 18, 214, 97, 63, 41, 244, 122, 55, 143 },
                            PasswordSalt = new byte[] { 36, 111, 179, 12, 157, 148, 208, 59, 111, 135, 113, 38, 205, 21, 158, 76, 135, 182, 206, 8, 211, 153, 207, 127, 55, 41, 100, 164, 6, 72, 161, 20, 14, 31, 23, 71, 126, 202, 141, 141 },
                            Phone = "+441234567890"
                        },
                        new
                        {
                            Id = 2,
                            Address = "123 Maple Street",
                            BirthDate = new DateTime(1992, 3, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Country = "USA",
                            Email = "bob@ikea.com",
                            FirstName = "Bob",
                            IsAdmin = false,
                            LastName = "Brown",
                            PasswordHash = new byte[] { 115, 81, 128, 43, 103, 236, 230, 23, 161, 244, 85, 105, 36, 200, 204, 144, 92, 77, 228, 200, 135, 27, 134, 214, 5, 144, 209, 108, 232, 59, 181, 129, 73, 147, 136, 169, 126, 222, 47, 3, 195, 233, 92, 189, 24, 245, 144, 121, 138, 152, 254, 169, 73, 204, 117, 134, 52, 121, 67, 189, 241, 89, 222, 246 },
                            PasswordSalt = new byte[] { 209, 205, 100, 64, 91, 176, 213, 110, 163, 41, 162, 122, 9, 7, 202, 125, 87, 245, 34, 127, 65, 70, 132, 44, 13, 4, 194, 172, 201, 5, 238, 37, 43, 246, 219, 216, 208, 250, 217, 20 },
                            Phone = "+12125550000"
                        },
                        new
                        {
                            Id = 3,
                            Address = "45 Maple Avenue",
                            BirthDate = new DateTime(1991, 5, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Country = "Canada",
                            Email = "charlie@ikea.com",
                            FirstName = "Charlie",
                            IsAdmin = false,
                            LastName = "Clark",
                            PasswordHash = new byte[] { 232, 119, 88, 98, 52, 188, 108, 223, 77, 155, 170, 213, 27, 226, 135, 166, 156, 3, 206, 220, 196, 61, 85, 146, 31, 54, 12, 100, 60, 93, 181, 116, 47, 134, 70, 227, 217, 146, 218, 100, 194, 159, 70, 179, 64, 149, 81, 14, 132, 189, 100, 27, 37, 4, 235, 227, 40, 140, 238, 33, 196, 33, 22, 172 },
                            PasswordSalt = new byte[] { 228, 76, 139, 139, 34, 171, 251, 36, 145, 250, 122, 156, 119, 156, 204, 25, 195, 104, 59, 176, 199, 172, 233, 152, 102, 12, 131, 52, 165, 129, 106, 102, 78, 42, 207, 148, 172, 254, 207, 209 },
                            Phone = "+14165551234"
                        },
                        new
                        {
                            Id = 4,
                            Address = "789 Berlin Str",
                            BirthDate = new DateTime(1993, 9, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Country = "Germany",
                            Email = "diana@ikea.com",
                            FirstName = "Diana",
                            IsAdmin = false,
                            LastName = "Davis",
                            PasswordHash = new byte[] { 115, 216, 116, 115, 192, 185, 102, 113, 14, 197, 146, 71, 58, 122, 195, 170, 60, 247, 176, 14, 159, 11, 105, 216, 211, 133, 2, 33, 205, 161, 118, 186, 246, 156, 105, 195, 50, 228, 213, 188, 210, 39, 51, 231, 99, 68, 147, 226, 109, 240, 75, 164, 146, 116, 83, 57, 221, 122, 169, 1, 117, 51, 190, 207 },
                            PasswordSalt = new byte[] { 80, 200, 136, 26, 241, 246, 187, 44, 193, 147, 71, 100, 241, 75, 7, 42, 140, 244, 0, 146, 23, 187, 47, 119, 5, 52, 201, 141, 145, 88, 167, 47, 148, 46, 128, 122, 22, 209, 96, 63 },
                            Phone = "+4915112345678"
                        },
                        new
                        {
                            Id = 5,
                            Address = "22 Rue de Lyon",
                            BirthDate = new DateTime(1995, 12, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Country = "France",
                            Email = "evan@ikea.com",
                            FirstName = "Evan",
                            IsAdmin = false,
                            LastName = "Evans",
                            PasswordHash = new byte[] { 247, 120, 15, 64, 158, 111, 116, 152, 116, 50, 133, 8, 33, 56, 206, 180, 226, 5, 186, 61, 191, 86, 213, 27, 242, 198, 216, 100, 30, 90, 21, 91, 193, 204, 222, 176, 89, 161, 201, 146, 54, 213, 207, 185, 148, 222, 215, 76, 141, 186, 24, 161, 25, 167, 95, 232, 194, 224, 169, 221, 209, 233, 58, 48 },
                            PasswordSalt = new byte[] { 125, 121, 167, 221, 251, 100, 243, 19, 193, 35, 240, 85, 178, 115, 16, 166, 3, 229, 71, 2, 18, 151, 72, 3, 133, 128, 109, 94, 102, 212, 160, 141, 41, 11, 49, 19, 15, 86, 107, 176 },
                            Phone = "+33142000000"
                        });
                });

            modelBuilder.Entity("ikea_data.Models.Category", b =>
                {
                    b.HasOne("ikea_data.Models.Category", "Parent")
                        .WithMany("Children")
                        .HasForeignKey("ParentId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("ikea_data.Models.Product", b =>
                {
                    b.HasOne("ikea_data.Models.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("ikea_data.Models.ProductCharacteristic", b =>
                {
                    b.HasOne("ikea_data.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("ikea_data.Models.ProductComment", b =>
                {
                    b.HasOne("ikea_data.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("ikea_data.Models.ProductImage", b =>
                {
                    b.HasOne("ikea_data.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("ikea_data.Models.SetItem", b =>
                {
                    b.HasOne("ikea_data.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ikea_data.Models.Set", "Set")
                        .WithMany()
                        .HasForeignKey("SetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("Set");
                });

            modelBuilder.Entity("ikea_data.Models.Category", b =>
                {
                    b.Navigation("Children");
                });
#pragma warning restore 612, 618
        }
    }
}
