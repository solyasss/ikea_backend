// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ikea_backend.Data;

#nullable disable

namespace ikea_backend.Migrations
{
    [DbContext(typeof(IkeaDbContext))]
    [Migration("20250503190344_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ikea_backend.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("ParentId")
                        .HasColumnType("int");

                    b.Property<string>("Slug")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ParentId");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Slug = "living-room",
                            Title = "Гостиная"
                        },
                        new
                        {
                            Id = 2,
                            Slug = "bedroom",
                            Title = "Спальня"
                        },
                        new
                        {
                            Id = 3,
                            Slug = "kitchen-and-dining",
                            Title = "Кухня и столовая"
                        },
                        new
                        {
                            Id = 4,
                            Slug = "bathroom",
                            Title = "Ванная"
                        },
                        new
                        {
                            Id = 5,
                            Slug = "office",
                            Title = "Офис"
                        },
                        new
                        {
                            Id = 6,
                            ParentId = 1,
                            Slug = "sofas",
                            Title = "Диваны"
                        },
                        new
                        {
                            Id = 7,
                            ParentId = 1,
                            Slug = "armchairs",
                            Title = "Кресла"
                        },
                        new
                        {
                            Id = 8,
                            ParentId = 1,
                            Slug = "coffee-tables",
                            Title = "Журнальные столики"
                        },
                        new
                        {
                            Id = 9,
                            ParentId = 1,
                            Slug = "wardrobes-and-shelves",
                            Title = "Шкафы и полки"
                        },
                        new
                        {
                            Id = 10,
                            ParentId = 1,
                            Slug = "tv-stands",
                            Title = "Стеллажи для ТВ"
                        },
                        new
                        {
                            Id = 11,
                            ParentId = 1,
                            Slug = "carpets",
                            Title = "Ковры"
                        },
                        new
                        {
                            Id = 12,
                            ParentId = 1,
                            Slug = "lighting",
                            Title = "Освещение"
                        },
                        new
                        {
                            Id = 13,
                            ParentId = 1,
                            Slug = "decor",
                            Title = "Декор"
                        },
                        new
                        {
                            Id = 14,
                            ParentId = 1,
                            Slug = "storage",
                            Title = "Системы хранения"
                        },
                        new
                        {
                            Id = 15,
                            ParentId = 2,
                            Slug = "beds",
                            Title = "Кровати"
                        },
                        new
                        {
                            Id = 16,
                            ParentId = 2,
                            Slug = "mattresses",
                            Title = "Матрасы"
                        },
                        new
                        {
                            Id = 17,
                            ParentId = 2,
                            Slug = "closets",
                            Title = "Шкафы"
                        },
                        new
                        {
                            Id = 18,
                            ParentId = 3,
                            Slug = "dining-tables",
                            Title = "Обеденные столы"
                        },
                        new
                        {
                            Id = 19,
                            ParentId = 3,
                            Slug = "chairs",
                            Title = "Стулья"
                        },
                        new
                        {
                            Id = 20,
                            ParentId = 3,
                            Slug = "bar-stools",
                            Title = "Барные стулья"
                        },
                        new
                        {
                            Id = 21,
                            ParentId = 3,
                            Slug = "dishes",
                            Title = "Посуда"
                        },
                        new
                        {
                            Id = 22,
                            ParentId = 3,
                            Slug = "table-setting",
                            Title = "Сервировка стола"
                        },
                        new
                        {
                            Id = 23,
                            ParentId = 3,
                            Slug = "cutlery",
                            Title = "Столовые приборы"
                        },
                        new
                        {
                            Id = 24,
                            ParentId = 4,
                            Slug = "shelves-and-cabinets",
                            Title = "Полки и шкафчики"
                        },
                        new
                        {
                            Id = 25,
                            ParentId = 4,
                            Slug = "towels",
                            Title = "Полотенца"
                        },
                        new
                        {
                            Id = 26,
                            ParentId = 4,
                            Slug = "shower-curtains",
                            Title = "Шторки для душа"
                        },
                        new
                        {
                            Id = 27,
                            ParentId = 5,
                            Slug = "desks",
                            Title = "Письменные столы"
                        },
                        new
                        {
                            Id = 28,
                            ParentId = 5,
                            Slug = "office-chairs",
                            Title = "Офисные кресла"
                        },
                        new
                        {
                            Id = 29,
                            ParentId = 5,
                            Slug = "bookshelves",
                            Title = "Книжные шкафы"
                        },
                        new
                        {
                            Id = 30,
                            ParentId = 5,
                            Slug = "desk-lamps",
                            Title = "Настольные лампы"
                        });
                });

            modelBuilder.Entity("ikea_backend.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("MainImage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Slug")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 19,
                            MainImage = "/src/assets/img/products/product-1.png",
                            Name = "Chair",
                            Price = 59.99m,
                            Slug = "chair-1"
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 12,
                            MainImage = "/src/assets/img/products/product-2.png",
                            Name = "Lamp",
                            Price = 19.99m,
                            Slug = "lamp-2"
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 12,
                            MainImage = "/src/assets/img/products/product-3.png",
                            Name = "Lamp",
                            Price = 19.99m,
                            Slug = "lamp-3"
                        });
                });

            modelBuilder.Entity("ikea_backend.Models.ProductCharacteristic", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductCharacteristics");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Material",
                            ProductId = 1,
                            Value = "Wood"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Color",
                            ProductId = 1,
                            Value = "Brown"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Color",
                            ProductId = 2,
                            Value = "White"
                        });
                });

            modelBuilder.Entity("ikea_backend.Models.ProductComment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CommentText")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int?>("Rating")
                        .HasColumnType("int");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductComments");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CommentText = "Nice chair",
                            ProductId = 1,
                            Rating = 5,
                            UserName = "User1"
                        },
                        new
                        {
                            Id = 2,
                            CommentText = "Bright lamp",
                            ProductId = 2,
                            Rating = 4,
                            UserName = "User2"
                        });
                });

            modelBuilder.Entity("ikea_backend.Models.ProductImage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("SortOrder")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductImages");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ImageUrl = "/src/assets/img/products/product-1.png",
                            ProductId = 1,
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 2,
                            ImageUrl = "/src/assets/img/products/product-2.png",
                            ProductId = 2,
                            SortOrder = 0
                        },
                        new
                        {
                            Id = 3,
                            ImageUrl = "/src/assets/img/products/product-3.png",
                            ProductId = 3,
                            SortOrder = 0
                        });
                });

            modelBuilder.Entity("ikea_backend.Models.Set", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Slug")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Sets");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ImageUrl = "/src/assets/img/furniture/furniture-1.png",
                            Name = "Набор №1",
                            Slug = "furniture-set-1"
                        },
                        new
                        {
                            Id = 2,
                            ImageUrl = "/src/assets/img/furniture/furniture-2.png",
                            Name = "Набор №2",
                            Slug = "furniture-set-2"
                        },
                        new
                        {
                            Id = 3,
                            ImageUrl = "/src/assets/img/furniture/furniture-3.png",
                            Name = "Набор №3",
                            Slug = "furniture-set-3"
                        });
                });

            modelBuilder.Entity("ikea_backend.Models.SetItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int>("SetId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.HasIndex("SetId");

                    b.ToTable("SetItems");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ProductId = 1,
                            Quantity = 2,
                            SetId = 1
                        },
                        new
                        {
                            Id = 2,
                            ProductId = 2,
                            Quantity = 1,
                            SetId = 1
                        },
                        new
                        {
                            Id = 3,
                            ProductId = 2,
                            Quantity = 2,
                            SetId = 2
                        },
                        new
                        {
                            Id = 4,
                            ProductId = 3,
                            Quantity = 1,
                            SetId = 2
                        },
                        new
                        {
                            Id = 5,
                            ProductId = 1,
                            Quantity = 1,
                            SetId = 3
                        });
                });

            modelBuilder.Entity("ikea_backend.Models.Category", b =>
                {
                    b.HasOne("ikea_backend.Models.Category", "Parent")
                        .WithMany("Children")
                        .HasForeignKey("ParentId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("ikea_backend.Models.Product", b =>
                {
                    b.HasOne("ikea_backend.Models.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("ikea_backend.Models.ProductCharacteristic", b =>
                {
                    b.HasOne("ikea_backend.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("ikea_backend.Models.ProductComment", b =>
                {
                    b.HasOne("ikea_backend.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("ikea_backend.Models.ProductImage", b =>
                {
                    b.HasOne("ikea_backend.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("ikea_backend.Models.SetItem", b =>
                {
                    b.HasOne("ikea_backend.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ikea_backend.Models.Set", "Set")
                        .WithMany()
                        .HasForeignKey("SetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("Set");
                });

            modelBuilder.Entity("ikea_backend.Models.Category", b =>
                {
                    b.Navigation("Children");
                });
#pragma warning restore 612, 618
        }
    }
}
